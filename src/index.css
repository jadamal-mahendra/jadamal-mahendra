@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap");

:root {
  --color-dark-primary: #06223F;
  --color-light-bg: #F8FAFC;
  --color-accent: #0ea5e9;
  --color-accent-hover: #0284c7;
  --color-subtle-text: #64748b;
  --color-border-light: #e5e7eb; /* Tailwind gray-200 */
  --color-white: #FFFFFF;

  /* Fonts */
  --font-sans: 'Poppins', sans-serif;

  /* Spacing (example, can add more) */
  --space-1: 0.25rem; 
  --space-2: 0.5rem;
  --space-4: 1rem;
  --space-6: 1.5rem;

  /* Container widths (mimicking Tailwind) */
  --screen-sm: 640px;
  --screen-md: 768px;
  --screen-lg: 1024px;
  --screen-xl: 1280px;
  --screen-2xl: 1536px;
}

/* Basic Reset & Base Styles */
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  scroll-behavior: smooth;
  font-family: var(--font-sans);
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  background-color: var(--color-light-bg);
  color: var(--color-dark-primary);
}

img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
}

input, button, textarea, select {
  font: inherit;
}

a {
  color: inherit;
  text-decoration: inherit;
}

/* Base Heading/Para Styles */
h1, h2, h3, h4, h5, h6 {
  color: var(--color-dark-primary);
  font-weight: 600;
  letter-spacing: -0.025em;
  margin-bottom: 0.5em;
}

h1 {
  font-size: 2.25rem;
  font-weight: 700;
}
@media (min-width: 768px) { h1 { font-size: 3rem; } }
@media (min-width: 1024px) { h1 { font-size: 3.75rem; } }

h2 {
  font-size: 1.875rem;
  font-weight: 700;
}
@media (min-width: 768px) { h2 { font-size: 2.25rem; } }

h3 {
  font-size: 1.5rem;
}
@media (min-width: 768px) { h3 { font-size: 1.875rem; } }

h4 {
  font-size: 1.25rem;
}
@media (min-width: 768px) { h4 { font-size: 1.5rem; } }

h5 {
   font-size: 1.125rem;
}
@media (min-width: 768px) { h5 { font-size: 1.25rem; } }

h6 {
   font-size: 1rem;
}
@media (min-width: 768px) { h6 { font-size: 1.125rem; } }

p {
  font-size: 1rem;
  color: var(--color-subtle-text);
  line-height: 1.625;
  margin-bottom: 1em;
}

input,
textarea {
  background-color: transparent;
  outline: none;
  color: var(--color-dark-primary);
}
input::placeholder,
textarea::placeholder {
  color: var(--color-subtle-text);
}

/* Global Utility & Helper Styles */
.container {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--space-4);
  padding-right: var(--space-4);
}

@media (min-width: 640px) { .container { max-width: var(--screen-sm); } }
@media (min-width: 768px) { .container { max-width: var(--screen-md); padding-left: var(--space-6); padding-right: var(--space-6); } }
@media (min-width: 1024px) { .container { max-width: var(--screen-lg); } }
@media (min-width: 1280px) { .container { max-width: var(--screen-xl); } }
@media (min-width: 1536px) { .container { max-width: var(--screen-2xl); } }

.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.625rem 1.5rem;
  font-weight: 500;
  letter-spacing: 0.025em;
  color: var(--color-white);
  text-transform: capitalize;
  transition: background-color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
  background-color: var(--color-accent);
  border-radius: 0.5rem;
  border: none;
  cursor: pointer;
  text-decoration: none;
}

.btn:hover {
  background-color: var(--color-accent-hover);
}

.btn:focus {
  outline: none;
  box-shadow: 0 0 0 3px var(--color-accent) / 0.5;
}

.section-padding {
   padding-top: 3rem;
   padding-bottom: 3rem;
}

@media (min-width: 768px) { .section-padding { padding-top: 4rem; padding-bottom: 4rem; } }

.section-title {
  font-size: 1.875rem;
  font-weight: 700;
  color: var(--color-dark-primary);
  margin-bottom: 0.75rem;
  text-align: center;
}

@media (min-width: 768px) { .section-title { font-size: 2.25rem; } }

.section-subtitle {
  font-size: 1rem;
  color: var(--color-subtle-text);
  margin-bottom: 2.5rem;
  text-align: center;
  max-width: 42rem;
  margin-left: auto;
  margin-right: auto;
}

@media (min-width: 768px) { .section-subtitle { font-size: 1.125rem; margin-bottom: 3rem; } }
@media (min-width: 1024px) { .section-subtitle { margin-bottom: 4rem; } }

/* Footer Styles (Keeping globally for now) */
.app-footer {
  background-color: var(--color-dark-primary);
  color: var(--color-subtle-text);
  padding: 1.5rem 0;
  text-align: center;
}

.app-footer-text {
  font-size: 0.875rem;
  margin-bottom: 0;
}

/* --- Component-Specific Styles Removed --- */
/* Tailwind directives might be needed depending on setup, but often removed 
   when not using Tailwind classes directly or relying on PostCSS 
@tailwind base;
@tailwind components;
@tailwind utilities;
*/

/* Add common styles for the glow card effect */

/* Keyframes for the flowing size animation */
@keyframes flowSize {
  0%, 100% {
    --gradient-size: 280px;
  }
  50% {
    --gradient-size: 330px;
  }
}

.glow-card {
  /* Base requirements for the effect */
  position: relative;
  z-index: 1; /* Ensure content is above ::before */
  overflow: hidden;

  /* Subtle background tint (uses --mouse-x/y set by JS) */
  /* Important: Apply specific background-color in component CSS */
  background-image: radial-gradient(
    700px circle at var(--mouse-x, -999px) var(--mouse-y, -999px), /* Default off-screen */
    rgba(52, 152, 219, 0.05) 0%,
    transparent 50%
  );
  background-repeat: no-repeat;
  /* border-radius should be set by the specific card component */
}

.glow-card::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit; /* Inherit from the specific .glow-card element */
  padding: 2px; /* Border width */

  /* Define variable for gradient size */
  --gradient-size: 300px; /* Default size */

  /* Border glow gradient (uses --mouse-x/y set by JS) */
  background: radial-gradient(
    var(--gradient-size) circle at var(--mouse-x, -999px) var(--mouse-y, -999px), /* Default off-screen */
    rgba(52, 152, 219, 0.6) 0%,
    rgba(52, 152, 219, 0.15) 40%,
    transparent 65%
  );

  /* Mask to create the border effect */
  -webkit-mask:
    linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0);
  mask:
    linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
          mask-composite: exclude;

  z-index: -1; /* Behind the content */
  pointer-events: none;

  /* Apply the flowing size animation */
  animation: flowSize 3s infinite ease-in-out;
}
