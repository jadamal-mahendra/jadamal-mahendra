/* src/components/Awards.module.css */

.awardsSection {
  /* Uses global section-padding */
  background-color: var(--color-white); /* Or alternate background */
}

.awardsGrid {
  display: grid;
  gap: 1.5rem; /* gap-6 */
}

@media (min-width: 768px) { /* md */
  .awardsGrid {
     grid-template-columns: repeat(2, minmax(0, 1fr)); /* md:grid-cols-2 */
     gap: 2rem; /* md:gap-8 */
  }
}

/* Add keyframes for the flowing size effect */
@keyframes flowSize {
  0%, 100% {
    --gradient-size: 280px; /* Smaller size */
  }
  50% {
    --gradient-size: 330px; /* Larger size */
  }
}

.awardItem {
  background-color: var(--color-light-bg);
  padding: 1.5rem;
  border-radius: 0.5rem;
  /* border-left: 4px solid var(--color-accent); */ /* Replaced by glow */
  /* transition: box-shadow 0.3s ease; */ /* Keep or remove */

  /* Add required styles for glow effect */
  position: relative;
  z-index: 1;
  overflow: hidden;

  /* Layer the subtle tint gradient */
  background-image: radial-gradient(
    700px circle at var(--mouse-x) var(--mouse-y),
    rgba(52, 152, 219, 0.05) 0%,
    transparent 50%
  );
  background-repeat: no-repeat;
  background-color: var(--color-light-bg); /* Keep original background */
}

/* Add the pseudo-element for the glow */
.awardItem::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  padding: 2px; /* Border width */

  /* Define variable for gradient size */
  --gradient-size: 300px; /* Default size */

  background: radial-gradient(
    var(--gradient-size) circle at var(--mouse-x) var(--mouse-y),
    rgba(52, 152, 219, 0.6) 0%,
    rgba(52, 152, 219, 0.15) 40%,
    transparent 65%
  );
  -webkit-mask:
    linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0);
  mask:
    linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
          mask-composite: exclude;
  z-index: -1;
  pointer-events: none;

  /* Add the flowing size animation */
  animation: flowSize 3s infinite ease-in-out;
}

.awardItem:hover {
  /* box-shadow: 0 4px 15px rgba(0, 0, 0, 0.07); */ /* Keep or remove */
  /* Optional: Add hover transform */
  transform: translateY(-3px);
  transition: transform 0.2s ease-out; /* Add transition for lift */
}

/* Icon styling if you add icons */
.awardIcon {
  color: var(--color-accent);
  margin-bottom: 1rem; /* mb-4 */
  /* Add size etc. */
}

.awardDetails { 
  /* Container for text content */
}

.awardName {
  /* Uses base h5 styles */
  font-size: 1.25rem; /* xl */
  margin-bottom: 0.25rem; /* mb-1 */
  color: var(--color-dark-primary);
}

.awardOrgDate {
  display: flex;
  flex-direction: column; /* Stack on mobile */
  gap: 0.1rem; /* Small gap */
  margin-bottom: 0.75rem; /* mb-3 */
}

@media (min-width: 640px) { /* sm */
  .awardOrgDate {
    flex-direction: row; /* Side-by-side on larger screens */
    justify-content: space-between;
    align-items: center;
  }
}

.awardOrg {
  font-size: 0.9rem; /* sm */
  font-weight: 500;
  color: var(--color-subtle-text);
}

.awardDate {
  font-size: 0.8rem; /* xs */
  color: var(--color-accent);
  font-weight: 500;
}

.awardDescription {
  /* Uses base p styles, potentially adjusted */
  font-size: 0.9rem;
  color: var(--color-subtle-text);
  margin-bottom: 0; /* Remove default p margin */
} 